<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Pangolin Database-App</name>
    </assembly>
    <members>
        <member name="T:Pangolin_Database_App.App">
            <summary>
            Interaction logic for App.xaml
            </summary>
            <summary>
            App
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Database.DatabaseManager">
            <summary>
            Manages the database
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Database.DatabaseManager.InitDatabase">
            <summary>
            Initalizes the database
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Database.DatabaseManager.GetDatabase">
            <summary>
            Singelton-Pattern to get database
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pangolin_Database_App.Database.DatabaseManager.GetPangolins">
            <summary>
            Get all pangolins of the database
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pangolin_Database_App.Database.DatabaseManager.RefreshPangolinList">
            <summary>
            Refreshes the pangolin list
            </summary>
        </member>
        <member name="F:Pangolin_Database_App.Database.DatabaseSync.clientProvider">
            <summary>
            Provider for local client database
            </summary>
        </member>
        <member name="F:Pangolin_Database_App.Database.DatabaseSync.tables">
            <summary>
            Tables to synchronize
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Database.DatabaseSync.SyncAsync(System.IProgress{Dotmim.Sync.ProgressArgs})">
            <summary>
            Syncs local database
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Database.DatabaseSync.CreateDatabaseOnServerAsync(System.String,System.String)">
            <summary>
            Initalizes Database on Server Side, resets database if already exists
            </summary>
            <returns></returns>
        </member>
        <member name="T:Pangolin_Database_App.Database.PangolinContext">
            <summary>
            Context class for pangolin database, stores informations about table
            UseDatabaseManager if you want to get the database
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Database.PangolinContext.CriminalCases">
            <summary>
            CriminalCase
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Database.PangolinContext.DailyActivities">
            <summary>
            Daily Activity Table
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Database.PangolinContext.Documents">
            <summary>
            Documents
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Database.PangolinContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
            Configures entity framework with sqlite
            </summary>
            <param name="optionsBuilder"></param>
        </member>
        <member name="M:Pangolin_Database_App.Database.PangolinContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Configures models for context
            </summary>
            <param name="modelBuilder"></param>
        </member>
        <member name="P:Pangolin_Database_App.Database.UserManagment.ActiveUser">
            <summary>
            Property for active user (model)
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Database.UserManagment.UpdateMySQLConString">
            <summary>
            Updates the mysql connection strings for active user
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Database.UserManagment.ComputeSha256Hash(System.String)">
            <summary>
            Used for hashing user passwords
            </summary>
            <param name="rawData"></param>
            <returns>hashed sha256 string</returns>
        </member>
        <member name="M:Pangolin_Database_App.Database.UserManagment.AddNewUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,Pangolin_Database_App.Database.PangolinContext)">
            <summary>
            This method adds a new user to database
            </summary>
            <param name="firstname"></param>
            <param name="lastname"></param>
            <param name="username"></param>
            <param name="passwordhash"></param>
            <returns>false if there is already a user with this username, else true</returns>
        </member>
        <member name="M:Pangolin_Database_App.Database.UserManagment.AddUserOnMySQLAsync(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Adds a new user on mysql
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Pangolin_Database_App.Database.UserManagment.UpdateUserPassOnMySQLAsync(System.String,System.String)">
            <summary>
            Updates user password on mysql
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Pangolin_Database_App.Database.UserManagment.DeleteUserOnMySQLAsync(System.String)">
            <summary>
            Deletes a User on mysql
            </summary>
            <param name="username"></param>
            <returns></returns>
        </member>
        <member name="M:Pangolin_Database_App.Database.UserManagment.AddDefaultAdminUser(System.String,Pangolin_Database_App.Database.PangolinContext)">
            <summary>
            ads new default admin user
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Database.UserManagment.GetUserByUsernameAndPassword(System.String,System.String)">
            <summary>
            returns user by username and password
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Pangolin_Database_App.Database.UserManagment.GetUserByUsernameAndCookie(System.String,System.String)">
            <summary>
            returns user by username and cookie
            </summary>
            <param name="username"></param>
            <param name="cookie"></param>
            <returns></returns>
        </member>
        <member name="M:Pangolin_Database_App.Database.UserManagment.DeleteCookieData">
            <summary>
            Deletes cookie data
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Database.UserManagment.SaveLoginData">
            <summary>
            Saves login data of current user as a xml cookie
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Database.UserManagment.LoadUserByCookie">
            <summary>
            Checks if cookie data exists and tries to get the user
            </summary>
            <returns>if there are valid cookie datas then return of the user else null</returns>
        </member>
        <member name="T:Pangolin_Database_App.Extensions.EnumerationExtension">
            <summary>
            Markup extension for using enums in WPF as itemsource
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Extensions.EnumerationExtension.#ctor(System.Type)">
            <summary>
            
            </summary>
            <param name="enumType">Used to define enum type</param>
        </member>
        <member name="P:Pangolin_Database_App.Extensions.EnumerationExtension.EnumType">
            <summary>
            saves enum type
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Extensions.EnumerationExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Provides enumeration member of enum
            </summary>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Pangolin_Database_App.Extensions.EnumerationExtension.GetDescription(System.Object)">
            <summary>
            Reads description of description attributes
            </summary>
            <param name="enumValue"></param>
            <returns></returns>
        </member>
        <member name="T:Pangolin_Database_App.Extensions.EnumerationExtension.EnumerationMember">
            <summary>
            Simple class for enumeration member
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Extensions.ProgressbarExtension">
            <summary>
            This class has a extension method for the progressbar for smooth loading
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Extensions.ProgressbarExtension.SetPercent(System.Windows.Controls.ProgressBar,System.Double)">
            <summary>
            Sets the percentage of a progressbar with a smooth animation loading
            </summary>
            <param name="progressBar">The progressbar you want to set</param>
            <param name="percentage">The percentage you want to set</param>
        </member>
        <member name="T:Pangolin_Database_App.Logger.LogManager">
            <summary>
            This class handels all logging for debug 
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Logger.LogManager.log(System.String,Pangolin_Database_App.Logger.LogCategory,Pangolin_Database_App.Logger.LogTopic,System.Exception,System.String,System.String,System.Int32)">
            <summary>
            Logs for debug
            </summary>
            <param name="message"></param>
            <param name="category"></param>
            <param name="topic"></param>
            <param name="ex"></param>
            <param name="caller"></param>
            <param name="path"></param>
            <param name="line"></param>
        </member>
        <member name="M:Pangolin_Database_App.Logger.LogManager.logWarning(System.String,Pangolin_Database_App.Logger.LogTopic,System.String,System.String,System.Int32)">
            <summary>
            Warning log
            </summary>
            <param name="message"></param>
            <param name="topic"></param>
            <param name="caller"></param>
        </member>
        <member name="M:Pangolin_Database_App.Logger.LogManager.logError(System.Exception,System.String,Pangolin_Database_App.Logger.LogTopic,System.String,System.String,System.Int32)">
            <summary>
            Error log
            </summary>
            <param name="ex"></param>
            <param name="message"></param>
            <param name="topic"></param>
            <param name="caller"></param>
        </member>
        <member name="M:Pangolin_Database_App.Logger.LogManager.logInfo(System.String,Pangolin_Database_App.Logger.LogTopic,System.String)">
            <summary>
            Info log
            </summary>
            <param name="message"></param>
            <param name="topic"></param>
            <param name="caller"></param>
        </member>
        <member name="M:Pangolin_Database_App.Logger.LogManager.Print(System.String)">
            <summary>
            Prints debug output
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Pangolin_Database_App.MainWindow">
            <summary>
            Interaction logic for MainWindow.xaml
            </summary>
            <summary>
            MainWindow
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.MainWindow.#ctor">
            <summary>
            Main window constructor
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.MainWindow.MinimizeWindow_Click(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Minimizes window
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.MainWindow.WindowMaximize_Click(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Maximizes Window
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.MainWindow.WindowClose_Click(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Closes Window
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Pangolin_Database_App.MainWindow.POINT.x">
            <summary>
            x coordinate of point.
            </summary>
        </member>
        <member name="F:Pangolin_Database_App.MainWindow.POINT.y">
            <summary>
            y coordinate of point.
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.MainWindow.POINT.#ctor(System.Int32,System.Int32)">
            <summary>
            Construct a point of coordinates (x,y).
            </summary>
        </member>
        <member name="F:Pangolin_Database_App.MainWindow.MONITORINFO.cbSize">
            <summary>
            </summary>            
        </member>
        <member name="F:Pangolin_Database_App.MainWindow.MONITORINFO.rcMonitor">
            <summary>
            </summary>            
        </member>
        <member name="F:Pangolin_Database_App.MainWindow.MONITORINFO.rcWork">
            <summary>
            </summary>            
        </member>
        <member name="F:Pangolin_Database_App.MainWindow.MONITORINFO.dwFlags">
            <summary>
            </summary>            
        </member>
        <member name="F:Pangolin_Database_App.MainWindow.RECT.left">
            <summary> Win32 </summary>
        </member>
        <member name="F:Pangolin_Database_App.MainWindow.RECT.top">
            <summary> Win32 </summary>
        </member>
        <member name="F:Pangolin_Database_App.MainWindow.RECT.right">
            <summary> Win32 </summary>
        </member>
        <member name="F:Pangolin_Database_App.MainWindow.RECT.bottom">
            <summary> Win32 </summary>
        </member>
        <member name="F:Pangolin_Database_App.MainWindow.RECT.Empty">
            <summary> Win32 </summary>
        </member>
        <member name="P:Pangolin_Database_App.MainWindow.RECT.Width">
            <summary> Win32 </summary>
        </member>
        <member name="P:Pangolin_Database_App.MainWindow.RECT.Height">
            <summary> Win32 </summary>
        </member>
        <member name="M:Pangolin_Database_App.MainWindow.RECT.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> Win32 </summary>
        </member>
        <member name="M:Pangolin_Database_App.MainWindow.RECT.#ctor(Pangolin_Database_App.MainWindow.RECT)">
            <summary> Win32 </summary>
        </member>
        <member name="P:Pangolin_Database_App.MainWindow.RECT.IsEmpty">
            <summary> Win32 </summary>
        </member>
        <member name="M:Pangolin_Database_App.MainWindow.RECT.ToString">
            <summary> Return a user friendly representation of this struct </summary>
        </member>
        <member name="M:Pangolin_Database_App.MainWindow.RECT.Equals(System.Object)">
            <summary> Determine if 2 RECT are equal (deep compare) </summary>
        </member>
        <member name="M:Pangolin_Database_App.MainWindow.RECT.GetHashCode">
            <summary>Return the HashCode for this struct (not garanteed to be unique)</summary>
        </member>
        <member name="M:Pangolin_Database_App.MainWindow.RECT.op_Equality(Pangolin_Database_App.MainWindow.RECT,Pangolin_Database_App.MainWindow.RECT)">
            <summary> Determine if 2 RECT are equal (deep compare)</summary>
        </member>
        <member name="M:Pangolin_Database_App.MainWindow.RECT.op_Inequality(Pangolin_Database_App.MainWindow.RECT,Pangolin_Database_App.MainWindow.RECT)">
            <summary> Determine if 2 RECT are different(deep compare)</summary>
        </member>
        <member name="M:Pangolin_Database_App.MainWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.CriminalCase.CrimeID">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.CriminalCase.ReferenceNumber">
            <summary>
            the ReferenceNumber of the Pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.CriminalCase.Date">
            <summary>
            the date
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.CriminalCase.CriminalOffense">
            <summary>
            the criminal offense
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.CriminalCase.AccusedPersons">
            <summary>
            the persons who are accused
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.CriminalCase.CaseBrief">
            <summary>
            a brief summary of the case
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.CriminalCase.Outcome">
            <summary>
            the outcome of the case
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.DailyActivity.DailyActivityID">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.DailyActivity.ReferencePangolin">
            <summary>
            the ReferenceNumber of the Pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.DailyActivity.Date">
            <summary>
            the date
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.DailyActivity.Walker">
            <summary>
            the walker
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.DailyActivity.Defectation">
            <summary>
            A boolean if the pangoli got defectation
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.DailyActivity.AreaWalked">
            <summary>
            the area that the pangoli walked
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.DailyActivity.DrankWater">
            <summary>
            A boolean if the pangoli drank water
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.DailyActivity.InititalWeight">
            <summary>
            the initial weight
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.DailyActivity.FinalWeight">
            <summary>
            the final weight
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.DailyActivity.ManureWeight">
            <summary>
            the manueWeight
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.DailyActivity.WakeupTime">
            <summary>
            the wakeup time
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.DailyActivity.WalkingTimeStart">
            <summary>
            the start of walkingTime
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.DailyActivity.WalkingTimeStop">
            <summary>
            the end of walkingTime
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.DailyActivity.WeatherObservations">
            <summary>
            weather observations, implemented with a bitmask (Hot|Sunny|Part Cloud|Full Cloud|Rain)
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.DailyActivity.Comment">
            <summary>
            other comments
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Document.DocumentID">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Document.ReferenceNumber">
            <summary>
            ReferenceNumber of the Pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Document.Date">
            <summary>
            Date of upload
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Document.FileName">
            <summary>
            Filename
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Document.FileDescription">
            <summary>
            Description of file
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Document.FileData">
            <summary>
            Data of file
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.InfantFeeding.InfantFeedingID">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.InfantFeeding.ReferenceNumber">
            <summary>
            the ReferenceNumber of the Pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.InfantFeeding.Date">
            <summary>
            the date
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.InfantFeeding.Time">
            <summary>
            the time of feeding
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.InfantFeeding.Formula">
            <summary>
            the formula, set with a bitmask (Royal Canin Kitty|Royal Canin Puppy|Other)
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.InfantFeeding.OtherFormulaDetails">
            <summary>
            other formula details
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.InfantFeeding.Volume">
            <summary>
            the volume
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.InfantFeeding.Defectation">
            <summary>
            A bool if the infant got defectation
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.InfantFeeding.DefectationCount">
            <summary>
            the amount of defectations
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.InfantFeeding.Weight">
            <summary>
            the weight of the infant
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.InfantFeeding.TimeOfWeighting">
            <summary>
            the time of weighting
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.InfantFeeding.Comment">
            <summary>
            comments to the infant feeding
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.InterdepartmentalMovement.MovementID">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.InterdepartmentalMovement.ReferenceNumber">
            <summary>
            the ReferenceNumber of the Pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.InterdepartmentalMovement.Date">
            <summary>
            the date
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.InterdepartmentalMovement.InterdepartmentalMovementFrom">
            <summary>
            Movement from
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.InterdepartmentalMovement.InterdepartmentalMovementTo">
            <summary>
            Movement to
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.InterdepartmentalMovement.Comment">
            <summary>
            Comment
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Microchip.MicrochipID">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Microchip.ReferenceNumber">
            <summary>
            the ReferenceNumber of the Pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Microchip.Date">
            <summary>
            the date
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Microchip.ChipNumber">
            <summary>
            the chip number
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Microchip.Manufacturer">
            <summary>
            the manufacturer of the chip
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Microchip.Tested">
            <summary>
            if it was tested
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Microchip.CommentsOrObservations">
            <summary>
            other comments or observations
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.MortalityID">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.ReferenceNumber">
            <summary>
            the ReferenceNumber of the Pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.Date">
            <summary>
            the date
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.Species">
            <summary>
            the species of the pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.Locality">
            <summary>
            the locality
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.Samplers">
            <summary>
            the persins who were samplers
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.Length">
            <summary>
            the length of the pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.Mass">
            <summary>
            the mass of the pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.CaseHistory">
            <summary>
            the case history
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.Heart">
            <summary>
            A Boolean if the heart was taken as sample
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.Kidney">
            <summary>
            A Boolean if the kidney was taken as sample
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.Lung">
            <summary>
            A Boolean if lungs were taken as sample
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.Muscle">
            <summary>
            A Boolean if muscles were taken as sample
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.Liver">
            <summary>
            A Boolean if the liver was taken as sample
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.Scale">
            <summary>
            A Boolean if scales were taken as sample
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.Spleen">
            <summary>
            A Boolean if spleen was taken as sample
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.ReproductiveOrgans">
            <summary>
            A Boolean if reproductive organs were taken as sample
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.Other1">
            <summary>
            other Samples that were taken
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.Other2">
            <summary>
            other Samples that were taken
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.Other3">
            <summary>
            other Samples that were taken
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.Other4">
            <summary>
            other Samples that were taken
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.Other5">
            <summary>
            other Samples that were taken
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Mortality.Other6">
            <summary>
            other Samples that were taken
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Pangolin.PangolinID">
            <summary>
            The primary key (unique id) for a pangolin
            </summary> 
        </member>
        <member name="F:Pangolin_Database_App.Models.Pangolin._referenceNumber">
            <summary>
            Reference Number of pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Pangolin.OfficialDocumentReference">
            <summary>
            Reference to the official document
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Pangolin.Name">
            <summary>
            Name of a pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Pangolin.Gender">
            <summary>
            Gender of a pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Pangolin.Weight">
            <summary>
            Weight of the pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Pangolin.ParasitesPresent">
            <summary>
            Parasites are present at the pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Pangolin.ParasitesNotPresent">
            <summary>
            No parasites presents
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Pangolin.ApproxAge">
            <summary>
            Aproximated age of pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Pangolin.HealthState">
            <summary>
            The health state of a pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Pangolin.DetailsOfReceiving">
            <summary>
            The details of receiving
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Pangolin.AreaOriginallyFrom">
            <summary>
            Area the pangolin came from
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Pangolin.TimeInCaptivity">
            <summary>
            Time in captivity
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Pangolin.ModeOfTransport">
            <summary>
            Mode of transport
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Pangolin.AuhtoritivePointOfContact">
            <summary>
            Contact person for this pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Pangolin.DistinguishingMarks">
            <summary>
            Distinguishing Marks of this pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Pangolin.CriminalCase">
            <summary>
            true = criminal case, false = hand in
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Pangolin.NoCriminalCase">
            <summary>
            No criminal case
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Pangolin.Date">
            <summary>
            The date
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Pangolin.Time">
            <summary>
            The time
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Models.Pangolin.NotifyPropertyChanged(System.String)">
            <summary>
            Method if a property changed
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="P:Pangolin_Database_App.Models.PhysicalMeasurements.PhysicalMeasurementsID">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.PhysicalMeasurements.ReferenceNumber">
            <summary>
            The primary key (unique id) for a pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.PhysicalMeasurements.Date">
            <summary>
            Date of update
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.PhysicalMeasurements.CDLCurled">
            <summary>
            CDL of curled pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.PhysicalMeasurements.CDLAnaethetised">
            <summary>
            CDL if pangolin is anaethetised
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.PhysicalMeasurements.HeadMeasurementEyes">
            <summary>
            Measurement between eyes
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.PhysicalMeasurements.Dorsal">
            <summary>
            Dorsal
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.PhysicalMeasurements.Ventral">
            <summary>
            Ventral
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.PhysicalMeasurements.HeadMeasurementSkull">
            <summary>
            Head Measurement Skull
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.PhysicalMeasurements.FleshPortionOfNose">
            <summary>
            The flesh portion of nose
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.PhysicalMeasurements.FleshPortionOfNoseWithLossOfScales">
            <summary>
            Flesh portion of nose with loss of scales
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.PhysicalMeasurements.GirthRibs">
            <summary>
            Girth Ribs
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.PhysicalMeasurements.LeftLegLength">
            <summary>
            Left leg length
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.PhysicalMeasurements.LeftFootWidth">
            <summary>
            Left foot width
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.PhysicalMeasurements.LeftFootLength">
            <summary>
            Left foot length
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.PhysicalMeasurements.RightLegLength">
            <summary>
            Right leg length
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.PhysicalMeasurements.RightFootWidth">
            <summary>
            Right foot width
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.PhysicalMeasurements.RightFootLength">
            <summary>
            Right foot length
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.PhysicalMeasurements.ScalePatternDorsal">
            <summary>
            Scale Pattern (DORSAL)
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.PhysicalMeasurements.ScalePatternVentral">
            <summary>
            Scale Pattern (VENTRAL)
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.PhysicalMeasurements.OtherObservations">
            <summary>
            Other observations
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Release.ReleaseID">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Release.ReferenceNumber">
            <summary>
            the ReferenceNumber of the Pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Release.Date">
            <summary>
            Date of release
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Release.Location">
            <summary>
            Location of release
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Release.GPSCordinates">
            <summary>
            GPS Cordinates of release
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Release.Transmitted">
            <summary>
            Is pangolin transmitted
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Release.Microchipped">
            <summary>
            Pangolin microchipped
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Release.IDMarks">
            <summary>
            Has pangolin IDMarks
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Release.MarkingDescription">
            <summary>
            Description of Markings applied
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Release.TransportationToReleaseSite">
            <summary>
            The transportation to release site
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Release.ReleaseDescription">
            <summary>
            Description of release
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.Release.OtherObservations">
            <summary>
            Other Observations
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.TrackingDevice.TrackingDeviceID">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.TrackingDevice.ReferenceNumber">
            <summary>
            The reference number of the pangolin the tracking device is attached to
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.TrackingDevice.Date">
            <summary>
            Date of update
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.TrackingDevice.Manufacturer">
            <summary>
            The manufacturer that made the tracking device
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.TrackingDevice.Frequency">
            <summary>
            The frequency this tracking is operating
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.TrackingDevice.Tested">
            <summary>
            Was the tracking device tested
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.TrackingDevice.Aanaesthetised">
            <summary>
            was pangolin anaesthetised
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.TrackingDevice.ReasonAnaesthetised">
            <summary>
            The reason why pangolin was anaesthetised
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.TrackingDevice.PhotographTransmitterInPlace">
            <summary>
            Is the photograph transmitter in place
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.TrackingDevice.MultipleTransmitterDescription">
            <summary>
            Description of other transmitters if there are multiple
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.User.UserID">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.User.Username">
            <summary>
            The Username
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.User.FirstName">
            <summary>
            The FirstName of the User
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.User.LastName">
            <summary>
            The LastName of the User
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.User.PasswordHash">
            <summary>
            SHA256-Hash of the Password of the User
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.User.IsAdmin">
            <summary>
            A Boolen if the User is an Administrator
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.User.sessionCookie">
            <summary>
            Session Cookie for stay logged in
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.VeterinaryTreatment.VeterinaryTreatmentID">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.VeterinaryTreatment.ReferenceNumber">
            <summary>
            the ReferenceNumber of the Pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.VeterinaryTreatment.Date">
            <summary>
            Date of treatment
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.VeterinaryTreatment.Time">
            <summary>
            Time of treatment
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.VeterinaryTreatment.VetVisit">
            <summary>
            Did pangolin visited vet
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.VeterinaryTreatment.Vet">
            <summary>
            Vet or facility visited by pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.VeterinaryTreatment.BodyTemperature">
            <summary>
            Temperature of pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.VeterinaryTreatment.GlucoseReading">
            <summary>
            Reading of glucose
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.VeterinaryTreatment.TreatmentDescription">
            <summary>
            Description of treatment
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.VeterinaryTreatment.Anesthesia">
            <summary>
            Was the Pangolin angesthesied
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.VeterinaryTreatment.Medication">
            <summary>
            did the pangolin get medication
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.VeterinaryTreatment.ReasonForMedication">
            <summary>
            reason for medication
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.VeterinaryTreatment.DrugAdministered">
            <summary>
            The drug that was administered
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.VeterinaryTreatment.Volume">
            <summary>
            Volume of drug adminstered
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.Models.VeterinaryTreatment.Method">
            <summary>
            Method used for medication
            First bit = Oral
            Second bit = I.V.
            Third bit = I.M.
            Fourth bit = Subcut
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Settings.SettingsManager.GetTempFilePath">
            <summary>
            Creates a temp folder in appdata (if no one exists) for temporary storage of data, returns path of folder
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pangolin_Database_App.Settings.SettingsManager.UpdateDbHostAndPort(System.String,System.Int32)">
            <summary>
            Updates the settings file to new host and port
            </summary>
            <param name="host"></param>
            <param name="port"></param>
            <returns></returns>
        </member>
        <member name="M:Pangolin_Database_App.Settings.SettingsManager.ReadSetting(System.String)">
            <summary>
            Reads a setting by its key
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Pangolin_Database_App.Settings.SettingsManager.AddUpdateAppSettings(System.String,System.String)">
            <summary>
            Adds or updates a settings key
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="T:Pangolin_Database_App.User_Controls.Login.PasswordView">
            <summary>
            Interaktionslogik für CredentialsView.xaml
            </summary>
            <summary>
            PasswordView
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.User_Controls.Login.PasswordView.LoginButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Login function
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.User_Controls.Login.PasswordView.Settings_Click(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Switch to settings view if settings icon is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.User_Controls.Login.PasswordView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.User_Controls.Login.SetupView">
            <summary>
            Interaktionslogik für SetupView.xaml
            </summary>
            <summary>
            SetupView
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.User_Controls.Login.SetupView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.User_Controls.SaveControl">
            <summary>
            Interaktionslogik für SaveControl.xaml
            </summary>
            <summary>
            SaveControl
            </summary>
        </member>
        <member name="E:Pangolin_Database_App.User_Controls.SaveControl.YesClickEvent">
            <summary>
            Save control yes click event
            </summary>
        </member>
        <member name="E:Pangolin_Database_App.User_Controls.SaveControl.NoClickEvent">
            <summary>
            Save control no click event
            </summary>
        </member>
        <member name="E:Pangolin_Database_App.User_Controls.SaveControl.CancelClickEvent">
            <summary>
            Save control cancel click event
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.User_Controls.SaveControl.NoClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Fire "No Click" event if button is pressed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.User_Controls.SaveControl.YesClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Fire YesClickEvent if button is pressed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.User_Controls.SaveControl.CancelClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Fire cancelclickevent if button is pressed, then switch to mainmenuviewmodel data context
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.User_Controls.SaveControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Util.BoolToIndexConverter">
            <summary>
            Converts index to bool and back for combobox (yes, no)
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Util.BoolToIndexConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            true means index 0 and false index 1 ==> used for indexing combo box elements for e.g. yes, no
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Pangolin_Database_App.Util.BoolToIndexConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            If index = 0 (yes) then return true else return false
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Pangolin_Database_App.Util.IHasDialog">
            <summary>
            Interface for view models if the view provieds dialogs
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Util.IntToMethodConverter">
            <summary>
            Used in vet treatment to convert bit mask to vet treatment method
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Util.IntToMethodConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts bit mask to string for vet treatment method bits a ordered --> Subcut|I.M.|I.V.|Oral
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Pangolin_Database_App.Util.IntToMethodConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not used
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Pangolin_Database_App.Util.IUpdateModel">
            <summary>
            Used for save control to get methods
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Util.MoonPhases">
            <summary>
            Moonphases
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Util.MoonCalculator">
            <summary>
            Calculates the approximate moonphase
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Util.MoonCalculator.calculate(System.DateTime)">
            <summary>
            Calculates the approximate moonphase
            
            (Dont ask how. :D)
            
            The algorithm for moon phase calculation is taken from the book:
            Astronomical Algorithms by Jean Meeus.
            Publisher Johann Ambrosius Barth, Leipzig, Berlin, Heidelberg 2nd edition 1994.
            ISBN 3-335-00400-0
            </summary>
            <param name="date">Date time (Please use UTC-Time)</param>
            <returns>Approximate Moonphase for a date</returns>
        </member>
        <member name="M:Pangolin_Database_App.Util.MoonCalculator.MoonPhaseToString(Pangolin_Database_App.Util.MoonPhases)">
            <summary>
            Converts Moonphase to String
            </summary>
            <param name="moonphase">Moonphase</param>
            <returns>string with name of moon phase</returns>
        </member>
        <member name="P:Pangolin_Database_App.Util.NotEmptyValidationRule.Item(System.String)">
            <summary>
            can check if a value of a column is valid, make sure ValidateOnDataErrors is set to true in data binding
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:Pangolin_Database_App.Util.NotEmptyValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Checks if value is empty
            </summary>
            <param name="value"></param>
            <param name="cultureInfo"></param>
            <returns>invalid validation result if value is empty</returns>
        </member>
        <member name="T:Pangolin_Database_App.Util.PasswordValidation">
            <summary>
            Checks if password has more than five characters
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Util.PasswordValidation.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Checks if password has more than five characters
            </summary>
            <param name="value"></param>
            <param name="cultureInfo"></param>
            <returns></returns>
        </member>
        <member name="T:Pangolin_Database_App.Util.RelayCommand">
            <summary>
            This class can relay ICommand commands to a other method (Action)
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Util.RelayCommand.#ctor(System.Action)">
            <summary>
            Provides action to relay command
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:Pangolin_Database_App.Util.RelayCommand.CanExecute(System.Object)">
            <summary>
            Can always execute
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Pangolin_Database_App.Util.RelayCommand.Execute(System.Object)">
            <summary>
            Executes provided action
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Pangolin_Database_App.Util.ValueConverter">
            <summary>
            Converts a number to a string and a string to a number
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Util.ValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a number to a string
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Pangolin_Database_App.Util.ValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a string to a number
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.AddPangolinViewModel.#ctor">
            <summary>
            Initalizes add view with standard model
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.AddPangolinViewModel.#ctor(Pangolin_Database_App.Models.Pangolin)">
            <summary>
            Initalized edit view with model
            </summary>
            <param name="modelToEdit"></param>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.AddPangolinViewModel.AddPangolinViewModel_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Resets the standard model if the selected model switches to another
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.AddPangolinViewModel.AddPangolinViewModel_ReloadSelectedModelEvent(System.Object,Pangolin_Database_App.Models.Pangolin)">
            <summary>
            Resets the standard model if save "no" button is clicked 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.AddPangolinViewModel.AddPangolinViewModel_UpdateModelEvent(System.Object,System.EventArgs)">
            <summary>
            Method that adds a new pangolin standard model if a new pangolin is added
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.AddPangolinViewModel.ResetStandardModel">
            <summary>
            Resets standardmodel if change of pangolin selection
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.AddPangolinViewModel.Genders">
            <summary>
            Returns all genders as IEnumerable
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.AddPangolinViewModel.HealthStates">
            <summary>
            Returns all health states as IEnumerable
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.AddPangolinViewModel.GetPangolinStandardModel(System.Boolean)">
            <summary>
            Factory to create a pangolin standard model
            </summary>
            <param name="createNew"></param>
            <returns></returns>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.AdminPanelViewModel.NotifyPropertyChanged(System.String)">
            <summary>
            Method if a property changed
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.AdminPanelViewModel.ShowSnackbar(System.String,System.Int32)">
            <summary>
            Shows snackbar with a message
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.AdminPanelViewModel.ShowSnackbar(System.String)">
            <summary>
            Shows snackbar with a message
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.AdminPanelViewModel.HideAppSnackbar">
            <summary>
            Hides snackbar
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.AdminPanelViewModel.SnackbarActive">
            <summary>
            Property for snackbar
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.AdminPanelViewModel.SnackbarMessage">
            <summary>
            Property for snackbar
            </summary>
        </member>
        <member name="F:Pangolin_Database_App.ViewModels.AdminPanelViewModel._hideSnackbar">
            <summary>
            Saves relaycommand for hide snackbar
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.AdminPanelViewModel.HideSnackbar">
            <summary>
            Relay command for hide snackbar
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.ViewModels.CredentialsViewModel">
            <summary>
            View model for credentials
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.CriminalCaseViewModel.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.CriminalCaseViewModel.CriminalCaseViewModel_UpdateModelEvent(System.Object,System.EventArgs)">
            <summary>
            creates new criminal case as selected model if model has been added or updated
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.DailyActivitySheetViewModel.SetModelByPangolinAndDate(System.DateTime,Pangolin_Database_App.Models.Pangolin)">
            <summary>
            Triers to get a existing model by date and pangolin or returns a new one if no found
            </summary>
            <param name="date"></param>
            <param name="p"></param>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.DailyActivitySheetViewModel.#ctor">
            <summary>
            default constructo for daily activity
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.DailyActivitySheetViewModel.DailyActivitySheetViewModel_PangolinChanged(System.Object,Pangolin_Database_App.Models.Pangolin)">
            <summary>
            Check if there is a existing model for this pangolin at current date or set new model
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.DailyActivitySheetViewModel.WalkingStart">
            <summary>
            Walking Time Start Wrapper for Pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.DailyActivitySheetViewModel.WalkingStop">
            <summary>
            Walking Time Stop Wrapper for Pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.DailyActivitySheetViewModel.TotalHoursWalked">
            <summary>
            Calculates total hours walked
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.DailyActivitySheetViewModel.TotalHoursWalkedInPercent">
            <summary>
            Calculates total hours in percent from 24h
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.DailyActivitySheetViewModel.Hot">
            <summary>
            Hot has number 4 in bitmask 
            </summary>
            <seealso cref="T:Pangolin_Database_App.Models.DailyActivity"/>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.DailyActivitySheetViewModel.Sunny">
            <summary>
            Sunny has number 3 in bitmask 
            </summary>
            <seealso cref="T:Pangolin_Database_App.Models.DailyActivity"/>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.DailyActivitySheetViewModel.PartCloud">
            <summary>
            Sunny has number 2 in bitmask 
            </summary>
            <seealso cref="T:Pangolin_Database_App.Models.DailyActivity"/>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.DailyActivitySheetViewModel.FullCloud">
            <summary>
            Sunny has number 1 in bitmask 
            </summary>
            <seealso cref="T:Pangolin_Database_App.Models.DailyActivity"/>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.DailyActivitySheetViewModel.Rain">
            <summary>
            Sunny has number 0 in bitmask 
            </summary>
            <seealso cref="T:Pangolin_Database_App.Models.DailyActivity"/>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.DailyActivitySheetViewModel.UpdateAllProperties">
            <summary>
            Update all properties
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.DailyActivitySheetViewModel.SetWeatherBit(System.Int32,System.Boolean)">
            <summary>
            Sets a weather bit
            </summary>
            <param name="bit"></param>
            <param name="value"></param>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.DailyActivitySheetViewModel.ReadWeatherBit(System.Int32)">
            <summary>
            Reads a weather bit
            </summary>
            <param name="bit"></param>
            <returns></returns>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.DocumentsViewModel.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.DocumentsViewModel.DocumentsViewModel_PangolinChanged(System.Object,Pangolin_Database_App.Models.Pangolin)">
            <summary>
            Update documents if pangolin changed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.DocumentsViewModel.DocumentsViewModel_UpdateModelEvent(System.Object,System.EventArgs)">
            <summary>
            Add new document model as selected model if previous was added 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.DocumentsViewModel.File_Drop(System.Object,System.Windows.DragEventArgs)">
            <summary>
            If file droped in file drop area then get file data and set selectedmodel properties
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.DocumentsViewModel.UploadFile(System.Object)">
            <summary>
            adds the draged file to the database
            </summary>
            <param name="sender"></param>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.DocumentsViewModel.DocumentForPangolin">
            <summary>
            List that returns all files for a selected pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.InfantFeedingViewModel.RoyalCaninKitty">
            <summary>
            Formula for Royal Canin Kitty
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.InfantFeedingViewModel.RoyalCaninPuppy">
            <summary>
            Formula for Royal Canin Puppy
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.InfantFeedingViewModel.Other">
            <summary>
            Formula for Other
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.InfantFeedingViewModel.DefectationIndex">
            <summary>
            Index:
            Yes = 0
            No = 1
            Multiple Times = 2
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.InfantFeedingViewModel.DefectationCount">
            <summary>
            DefectationCount
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.InterdepartmentalMovementViewModel.InterdepartmentalMovementViewModel_UpdateModelEvent(System.Object,System.EventArgs)">
            <summary>
            adds new model if previous was updated
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.LoginViewModel.ModelContent">
            <summary>
            Property for either credentials view model or setup view model
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.LoginViewModel.#ctor(Pangolin_Database_App.Util.RelayCommand)">
            <summary>
            default constructor 
            </summary>
            <param name="ShowMainMenu">RelayCommand for the show main menu method</param>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.LoginViewModel.SwitchContent">
            <summary>
            Switches content to either credentials login or set up menu
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.MortalityViewModel.MortalityViewModel_PangolinChanged(System.Object,Pangolin_Database_App.Models.Pangolin)">
            <summary>
            If pangolin changed check if there is already a existing mortality model for this pangolin if yes set as selected model
            if no create new model for selected model
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.PhysicalMesaurementsViewModel.Pangolin_Changed(System.Object,Pangolin_Database_App.Models.Pangolin)">
            <summary>
            Sets model for pangolin
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.ReleaseViewModel.Pangolin_Changed(System.Object,Pangolin_Database_App.Models.Pangolin)">
            <summary>
            Sets model for pangolin
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.ReleaseViewModel.IsDialogOpen">
            <summary>
            Property for is dialog open
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.ReleaseViewModel.DialogContent">
            <summary>
            Saves view model for extended dialog
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.ReleaseViewModel.Microchipped">
            Microchipped
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.ReleaseViewModel.Transmitted">
            Transmitted
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.SetupViewModel.#ctor(Pangolin_Database_App.ViewModels.LoginViewModel)">
            <summary>
            default constructor
            </summary>
            <param name="model"></param>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.SetupViewModel.DatabaseIP">
            <summary>
            database host proeprty
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.SetupViewModel.DatabasePort">
            <summary>
            database port property
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.SetupViewModel.DbInitUsername">
            <summary>
            database username for db init
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.SetupViewModel.DbInitPassword">
            <summary>
            database user password for db init
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.SetupViewModel.InitButtonEnabled">
            <summary>
            Property if user can click init button
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.SetupViewModel.UpdateDbHostandPort">
            <summary>
            updates db host and port settings
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.SetupViewModel.InitDb">
            <summary>
            initalizes, resets database on mysql server side
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.SynchronizeViewModel.StatusText">
            <summary>
            Current status text
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.SynchronizeViewModel.LoadingAnimation">
            <summary>
            Property if animation is on
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.SynchronizeViewModel.SyncCommandAsync">
            <summary>
            Sync command
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.SynchronizeViewModel.Report(Dotmim.Sync.ProgressArgs)">
            <summary>
            Report for status change in sync
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.TrackingDeviceViewModel.#ctor(Pangolin_Database_App.Models.Pangolin)">
            <summary>
            default constructor
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.TrackingDeviceViewModel.TrackingDeviceViewModel_PangolinChanged(System.Object,Pangolin_Database_App.Models.Pangolin)">
            <summary>
            update previous devices if pangolin changed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.TrackingDeviceViewModel.TrackingDeviceViewModel_UpdateModelEvent(System.Object,System.EventArgs)">
            <summary>
            create new model if old ones updated
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.TrackingDeviceViewModel.PreviousDevices">
            <summary>
            returns a list of all previous devices attached to the selected pangolin
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.VeterinaryTreatmentViewModel.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.VeterinaryTreatmentViewModel.VeterinaryTreatmentViewModel_UpdateModelEvent(System.Object,System.EventArgs)">
            <summary>
            create new model if previous was added / updated
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.VeterinaryTreatmentViewModel.VeterinaryTreatmentViewModel_PangolinChanged(System.Object,Pangolin_Database_App.Models.Pangolin)">
            <summary>
            update previous treatments if model changed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.VeterinaryTreatmentViewModel.PreviousTreatments">
            <summary>
            returns a list of previous treatments for a pangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.VeterinaryTreatmentViewModel.Subcut">
            <summary>
            read if property is checked for model by bit mask value
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.VeterinaryTreatmentViewModel.IM">
            <summary>
            read if property is checked for model by bit mask value
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.VeterinaryTreatmentViewModel.IS">
            <summary>
            read if property is checked for model by bit mask value
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.VeterinaryTreatmentViewModel.Oral">
            <summary>
            read if property is checked for model by bit mask value
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.ViewModels.ValidationResult">
            <summary>
            validation result for model validation
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.ViewModels.ViewModelBase`1">
            <summary>
            view model base for most views
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.ViewModelBase`1.SetBit(System.Int32,System.Int32,System.Boolean,Pangolin_Database_App.ViewModels.ViewModelBase{`0}.IntValue)">
            <summary>
            Sets bit in bitmask
            </summary>
            <param name="bit"></param>
            <param name="value"></param>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.ViewModelBase`1.ReadBit(System.Int32,System.Int32)">
            <summary>
            Reads bit in bitmask
            </summary>
            <param name="bit"></param>
            <returns></returns>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.ViewModelBase`1.SnackbarActive">
            <summary>
            Property for snackbar
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.ViewModelBase`1.SnackbarMessage">
            <summary>
            Property for snackbar
            </summary>
        </member>
        <member name="F:Pangolin_Database_App.ViewModels.ViewModelBase`1._hideSnackbar">
            <summary>
            Saves relaycommand for hide snackbar
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.ViewModelBase`1.HideSnackbar">
            <summary>
            Relay command for hide snackbar
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.ViewModelBase`1.HideAppSnackbar">
            <summary>
            Hides snackbar
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.ViewModelBase`1.ShowSnackbar(System.String)">
            <summary>
            Shows snackbar with a message
            </summary>
            <param name="message"></param>
        </member>
        <member name="F:Pangolin_Database_App.ViewModels.ViewModelBase`1.sessionSnackbarKey">
            <summary>
            Key for hiding thread bar after certain seconds, checks if method was raised another time
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.ViewModelBase`1.ShowSnackbar(System.String,System.Int32)">
            <summary>
            Shows snackbar with a message
            </summary>
            <param name="message"></param>
        </member>
        <member name="F:Pangolin_Database_App.ViewModels.ViewModelBase`1.dbset">
            <summary>
            Saves dbset that should be used for this view model
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.ViewModelBase`1.#ctor(Microsoft.EntityFrameworkCore.DbSet{`0})">
            <summary>
            Applies dbset and relay command for hidesnackbar
            </summary>
            <param name="dbset">dbset the view model base should access</param>
        </member>
        <member name="F:Pangolin_Database_App.ViewModels.ViewModelBase`1._pangolins">
            <summary>
            Saves all pangolins
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.ViewModelBase`1.Pangolins">
            <summary>
            Collection for all pangolins
            </summary>
        </member>
        <member name="F:Pangolin_Database_App.ViewModels.ViewModelBase`1._selectedPangolin">
            <summary>
            Saves selected pangolin
            </summary>
        </member>
        <member name="E:Pangolin_Database_App.ViewModels.ViewModelBase`1.PangolinChanged">
            <summary>
            Fires if pangolin changed, passes new pangolin as parameter
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.ViewModelBase`1.SelectedPangolin">
            <summary>
            Selected Pangolin for reference
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.ViewModelBase`1.ChangePangolinReferenceForModel">
            <summary>
            Searches for Pangolin references in model and sets it to selectedpangolin
            </summary>
        </member>
        <member name="P:Pangolin_Database_App.ViewModels.ViewModelBase`1.SelectedModel">
            <summary>
            Property for curent selected model
            </summary>
        </member>
        <member name="E:Pangolin_Database_App.ViewModels.ViewModelBase`1.UpdateModelEvent">
            <summary>
            Event for handeling updates
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.ViewModelBase`1.UpdateSelectedModel">
            <summary>
            Checks if the selected model is already in the database,
            if yes the model will be updated
            if no the model will be added
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.ViewModelBase`1.ValidateModel">
            <summary>
            Validates a model
            </summary>
            <returns></returns>
        </member>
        <member name="E:Pangolin_Database_App.ViewModels.ViewModelBase`1.ReloadSelectedModelEvent">
            <summary>
            Event for handeling selected model reload, will be called before model reload (use) reloadmodelevent if you want to catch after
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.ViewModelBase`1.ReloadSelectedModel(System.Boolean)">
            <summary>
            Reloads the selected model
            </summary>
        </member>
        <member name="E:Pangolin_Database_App.ViewModels.ViewModelBase`1.ReloadModelEvent">
            <summary>
            Event for handeling a model reload, will be called after model reload
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.ViewModelBase`1.ReloadModel(`0)">
            <summary>
            Resets the selected model to its default value
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.ViewModelBase`1.ModelExistInDatabase(`0)">
            <summary>
            Checks if the selected model exist in database
            </summary>
            <returns>
            true if it exists
            false if the model does not exist in the database
            </returns>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.ViewModelBase`1.GetPrimaryKeyForModel(`0)">
            <summary>
            Obtains the primary key of the selected model through reflection
            this methods searches for a property with they key attribute
            if no property is found, KeyNotFoundException will be thrown
            </summary>
            <returns>Value of the primary key</returns>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.ViewModelBase`1.PrimaryKeyExist(Microsoft.EntityFrameworkCore.DbSet{`0},System.Object[])">
            <summary>
            searches in the dbset if the primary key exists
            </summary>
            <param name="db"></param>
            <param name="primaryKeys"></param>
            <returns></returns>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.ViewModelBase`1.NotifyPropertyChanged(System.String)">
            <summary>
            Method if a property changed
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.ViewModelBase`1.ResetSelectedModel">
            <summary>
            Resets selected model
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.ViewModels.ViewModelBase`1.ResetSelectedModelToDefaultValues">
            <summary>
            Resets Selected Model to default values
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Views.AddPangolinView">
            <summary>
            Interaktionslogik für AddPangolinView.xaml
            </summary>
            <summary>
            AddPangolinView
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Views.AddPangolinView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Views.AdminPanelView">
            <summary>
            Interaktionslogik für AdminPanelView.xaml
            </summary>
            <summary>
            AdminPanelView
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Views.AdminPanelView.NavToMainMenu_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            If button "back" is pressed then switch to main menu
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.Views.AdminPanelView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Views.CriminalCaseView">
            <summary>
            Interaktionslogik für CriminalCaseView.xaml
            </summary>
            <summary>
            CriminalCaseView
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Views.CriminalCaseView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Views.DailyActivitySheetView">
            <summary>
            Interaktionslogik für DailyActivitySheetView.xaml
            </summary>
            <summary>
            DailyActivitySheetView
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Views.DailyActivitySheetView.WalkingStart_TimeChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Nullable{System.DateTime}})">
            <summary>
            Update progressbar if walkingstart time changes
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.Views.DailyActivitySheetView.UpdateProgressBar">
            <summary>
            This method access the extension method of the progressbar to smoothly update the value
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Views.DailyActivitySheetView.WalkingStop_TimeChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Nullable{System.DateTime}})">
            <summary>
            Update progressbar if walkingstop time changes
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.Views.DailyActivitySheetView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Views.DocumentsView">
            <summary>
            Interaktionslogik für DocumentsView.xaml
            </summary>
            <summary>
            DocumentsView
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Views.DocumentsView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Views.InfantFeedingView">
            <summary>
            Interaktionslogik für InfantFeedingView.xaml
            </summary>
            <summary>
            InfantFeedingView
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Views.InfantFeedingView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Views.InterdepartmentalMovementView">
            <summary>
            Interaktionslogik für InterdepartmentalMovementView.xaml
            </summary>
            <summary>
            InterdepartmentalMovementView
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Views.InterdepartmentalMovementView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Views.Login">
            <summary>
            Interaktionslogik für Login.xaml
            </summary>
            <summary>
            Login
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Views.Login.ShowMainMenu">
            <summary>
            Closes this view and shows main view
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Views.Login.Close_Click(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            close
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.Views.Login.Minimize_Click(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            minimize
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.Views.Login.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Views.MainMenuView">
            <summary>
            Interaktionslogik für MainMenuView.xaml
            </summary>
            <summary>
            MainMenuView
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Views.MainMenuView.AddNewPangolinButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            If button for "add new pangolin" is pressed then swicht datacontext to new "add pangolin view model"
            </summary>
            <author>Tarik A.</author>
            
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.Views.MainMenuView.DailyActivitySheet_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            If button for "daily activity sheet" is pressed the switch datacontext to new "daily activity sheet view model"
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.Views.MainMenuView.InfantFeeding_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            If button for "Infant feeding" is pressed, then switch to new datacontext "infant feeding view model"
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.Views.MainMenuView.VeterinaryTreatment_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            If button for "veterinary treatment" is pressed, then switch to new datacontext "veterinary treatment"
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.Views.MainMenuView.InterdepartmentMovement_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            If button "interdepartmentmovement" is pressed, then switch to new datacontext "interdepartment movement"
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.Views.MainMenuView.PhysicalMeasurements_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            If button "physical measurement" is pressed, then switch to new datacontext "physical measurements"
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.Views.MainMenuView.Release_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            If button "release" is pressed, then switch to new datacontext "release"
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.Views.MainMenuView.Microchip_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            If button "microchip" is pressed, then switch to new datacontext "microchip"
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.Views.MainMenuView.TrackingDevice_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            If button "tracking device" is pressed, then switch to new datacontext "tracking device"
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.Views.MainMenuView.CriminalCase_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            If button "criminale case" is pressed, then switch to new datacontext "criminal case"
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.Views.MainMenuView.Documents_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            If button "documents" is pressed, then switch to new datacontext "documents"
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.Views.MainMenuView.AdminPanel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            If button "admin panel" is pressed, then switch to new datacontext "admin panel"
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.Views.MainMenuView.Mortality_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            If button "mortality" is pressed, then switch to new datacontext "mortality"
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.Views.MainMenuView.EditButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Edit button in pangolin selection clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.Views.MainMenuView.SignOut_Click(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Signs out user
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pangolin_Database_App.Views.MainMenuView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Views.MicrochipView">
            <summary>
            Interaktionslogik für MicrochipView.xaml
            </summary>
            <summary>
            MicrochipView
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Views.MicrochipView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Views.MortalityView">
            <summary>
            Interaktionslogik für MortalityView.xaml
            </summary>
            <summary>
            MortalityView
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Views.MortalityView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Views.PhysicalMeasurementsView">
            <summary>
            Interaktionslogik für PhysicalMeasurementsView.xaml
            </summary>
            <summary>
            PhysicalMeasurementsView
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Views.PhysicalMeasurementsView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Views.ReleaseView">
            <summary>
            Interaktionslogik für ReleaseView.xaml
            </summary>
            <summary>
            ReleaseView
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Views.ReleaseView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Views.SyncView">
            <summary>
            Interaktionslogik für SyncView.xaml
            </summary>
            <summary>
            SyncView
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Views.SyncView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Views.TemplateView">
            <summary>
            Interaktionslogik für TemplateView.xaml
            </summary>
            <summary>
            TemplateView
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Views.TemplateView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Views.TrackingDeviceView">
            <summary>
            Interaktionslogik für TrackingDeviceView.xaml
            </summary>
            <summary>
            TrackingDeviceView
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Views.TrackingDeviceView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Pangolin_Database_App.Views.VeterinaryTreatmentView">
            <summary>
            Interaktionslogik für VeterinaryTreatmentView.xaml
            </summary>
            <summary>
            VeterinaryTreatmentView
            </summary>
        </member>
        <member name="M:Pangolin_Database_App.Views.VeterinaryTreatmentView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
