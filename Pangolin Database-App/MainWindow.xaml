<Window x:Class="Pangolin_Database_App.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:viewmodels="clr-namespace:Pangolin_Database_App.ViewModels"
        xmlns:views="clr-namespace:Pangolin_Database_App.Views"
        xmlns:local="clr-namespace:Pangolin_Database_App"
        mc:Ignorable="d"
        Title="Pangolin - Database" MinHeight="500" MinWidth="800" WindowStartupLocation="CenterScreen" WindowStyle="None" ResizeMode="CanResizeWithGrip">
    
    <!-- Definition of Caption Heights-->
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="32"></WindowChrome>
    </WindowChrome.WindowChrome>
    
    <!-- Window Resources & DataTemplates-->
    <Window.Resources>
        <DataTemplate DataType="{x:Type viewmodels:MainMenuViewModel}">
            <views:MainMenuView DataContext="{Binding}"></views:MainMenuView>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:AddPangolinViewModel}">
            <views:AddPangolinView DataContext="{Binding}"></views:AddPangolinView>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:DailyActivitySheetViewModel}">
            <views:DailyActivitySheetView DataContext="{Binding}"></views:DailyActivitySheetView>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:InfantFeedingViewModel}">
            <views:InfantFeedingView DataContext="{Binding}"></views:InfantFeedingView>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:VeterinaryTreatmentViewModel}">
            <views:VeterinaryTreatmentView DataContext="{Binding}"></views:VeterinaryTreatmentView>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:InterdepartmentalMovementViewModel}">
            <views:InterdepartmentalMovementView DataContext="{Binding}"></views:InterdepartmentalMovementView>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:PhysicalMesaurementsViewModel}">
            <views:PhysicalMeasurementsView DataContext="{Binding}"></views:PhysicalMeasurementsView>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:ReleaseViewModel}">
            <views:ReleaseView DataContext="{Binding}"></views:ReleaseView>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:MicrochipViewModel}">
            <views:MicrochipView DataContext="{Binding}"></views:MicrochipView>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:TrackingDeviceViewModel}">
            <views:TrackingDeviceView DataContext="{Binding}"></views:TrackingDeviceView>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:CriminalCaseViewModel}">
            <views:CriminalCaseView DataContext="{Binding}"></views:CriminalCaseView>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:DocumentsViewModel}">
            <views:DocumentsView DataContext="{Binding}"></views:DocumentsView>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:AdminPanelViewModel}">
            <views:AdminPanelView DataContext="{Binding}"></views:AdminPanelView>
        </DataTemplate>
    </Window.Resources>
    
    <Grid>
        <!-- Caption Border-->
        <Border Height="32" VerticalAlignment="Top">
            <Border.Background>
                <LinearGradientBrush>
                    <GradientStop Color="Red" Offset="0.0"></GradientStop>
                    <GradientStop Color="#FC1E8A" Offset="0.93"></GradientStop>
                </LinearGradientBrush>
            </Border.Background>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.1*"></ColumnDefinition>
                    <ColumnDefinition Width="0.95*"></ColumnDefinition>
                    <ColumnDefinition Width="35"></ColumnDefinition>
                    <ColumnDefinition Width="35"></ColumnDefinition>
                    <ColumnDefinition Width="35"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <!-- Window Minimize-->
                <Grid Grid.Column="2" WindowChrome.IsHitTestVisibleInChrome="True" MouseDown="MinimizeWindow_Click">
                    <materialDesign:PackIcon Kind="WindowMinimize" VerticalAlignment="Center" HorizontalAlignment="Center"></materialDesign:PackIcon>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="LightGray"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Background" Value="Transparent"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                </Grid>
                <!-- Window Maximize-->
                <Grid Grid.Column="3" WindowChrome.IsHitTestVisibleInChrome="True" MouseDown="WindowMaximize_Click">
                    <materialDesign:PackIcon Kind="WindowMaximize" VerticalAlignment="Center" HorizontalAlignment="Center"></materialDesign:PackIcon>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="LightGray"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Background" Value="Transparent"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                </Grid>
                <!-- Close Button-->
                <Grid Grid.Column="4" WindowChrome.IsHitTestVisibleInChrome="True" MouseDown="WindowClose_Click">
                    <materialDesign:PackIcon Kind="WindowClose" VerticalAlignment="Center" HorizontalAlignment="Center"></materialDesign:PackIcon>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Red"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Background" Value="Transparent"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                </Grid>
            </Grid>
        </Border>
        
        <!-- Content-->
        <ContentControl Content="{Binding}" Margin="0,32,0,0"/>
    </Grid>
</Window>
